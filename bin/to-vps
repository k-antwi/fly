#!/usr/bin/env bash

UNAMEOUT="$(uname -s)"
ARGS=("$@")


# Check if the correct number of arguments is provided
if [ "$#" -ne 4 ]; then
    echo "Usage: $0 <source_dir> <dest_user> <dest_host> <dest_dir>"
    exit 1
fi

# Variables from arguments
SOURCE_DIR="$1"
DEST_USER="$2"
DEST_HOST="$3"
DEST_DIR="$4"
APP_NAME="fly-app"
EXCLUDE_DIRS=(".git" ".github" "storage" "node_modules" "tests" "vendor")
ARCHIVE_NAME="fly-archive.tar.gz"

echo "${BOLD}... about to take off.${NC}" >&2
echo "$SOURCE_DIR $DEST_USER@$DEST_HOST:$DEST_DIR"

    EXCLUDE_OPTIONS=""
    for dir in "${EXCLUDE_DIRS[@]}"; do
        EXCLUDE_OPTIONS+="--exclude=$dir "
    done

# Compress the source directory
tar -czf "$ARCHIVE_NAME" "$EXCLUDE_OPTIONS" -C "$SOURCE_DIR" .

# SCP command to copy files
scp -r "$ARCHIVE_NAME" "$DEST_USER@$DEST_HOST:$DEST_DIR"

# Compress the source directory

# Check if the SCP command was successful
if [ $? -eq 0 ]; then
    echo "Files copied successfully."
    rm "$ARCHIVE_NAME"
    ssh "$DEST_USER@$DEST_HOST" "mkdir -p $DEST_DIR/$APP_NAME && tar --warning=no-unknown-keyword -xzf $DEST_DIR/$ARCHIVE_NAME -C $DEST_DIR/$APP_NAME && rm $DEST_DIR/$ARCHIVE_NAME"
    exit 0;
else
    echo "Error occurred while copying files."
    # Clean up the archive file
    rm "$ARCHIVE_NAME"
fi

exit 0;
